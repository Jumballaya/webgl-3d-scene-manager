{
  "name":"Sobel Outline",
  "code":"\\n    void make_kernel(inout vec4 n[9], sampler2D tex, vec2 coord)\\n    {\\n      float w = 1.0 / u_screensize[0];\\n      float h = 1.0 / u_screensize[1];\\n\\n      n[0] = texture(tex, coord + vec2( -w, -h));\\n      n[1] = texture(tex, coord + vec2(0.0, -h));\\n      n[2] = texture(tex, coord + vec2(  w, -h));\\n      n[3] = texture(tex, coord + vec2( -w, 0.0));\\n      n[4] = texture(tex, coord);\\n      n[5] = texture(tex, coord + vec2(  w, 0.0));\\n      n[6] = texture(tex, coord + vec2( -w, h));\\n      n[7] = texture(tex, coord + vec2(0.0, h));\\n      n[8] = texture(tex, coord + vec2(  w, h));\\n    }\\n\\n    void main(void)\\n    {\\n      vec4 n[9];\\n      vec4 base = texture(u_texture, v_uv);\\n      make_kernel(n, u_texture, v_uv);\\n\\n      vec4 sobel_edge_h = n[2] + (2.0*n[5]) + n[8] - (n[0] + (2.0*n[3]) + n[6]);\\n      vec4 sobel_edge_v = n[0] + (2.0*n[1]) + n[2] - (n[6] + (2.0*n[7]) + n[8]);\\n      vec4 sobel = sqrt((sobel_edge_h * sobel_edge_h) + (sobel_edge_v * sobel_edge_v));\\n\\n      vec3 color = base.rgb / (1.0 - sobel.rgb / 3.0);\\n      outColor = vec4(color, base.a);\\n    }\\n  ",
  "description":"Creates outlines where 2 drastically different colors meet"
}